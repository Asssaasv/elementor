name: Playwright

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/config.json'
      - 'bin/**'
      - '.gitignore'
      - 'docs/**'
  schedule:
    - cron: '30 08 * * 0,1,2,3,4,5'
  workflow_dispatch:
    inputs:
      reporter:
        description: 'Select a reporter'
        required: false
        type: choice
        options:
          - allure-playwright
          - html
          - blob
          - list
        default: allure-playwright
      path-to-results:
        description: 'Provide path to reporter files'
        required: false
        type: choice
        options:
          - test-results/
          - tests/playwright/blob-report
          - allure-results
        default: allure-results
      fail_fast:
        type: boolean
        description: 'Cancel tests when one of them fails'
        required: true
        default: false

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  PHP_VERSION: '8.0'
  WP_CORE_VERSION: 'latest'

jobs:
  build-plugin:
    name: Build plugin
    uses: ./.github/workflows/build.yml

  Playwright:
    name: Playwright test - ${{ matrix.shardIndex }}
    runs-on: ubuntu-latest
    needs: [build-plugin]
    if: ${{ github.event.pull_request.title == null || needs.build-plugin.outputs.changelog_diff }}
    strategy:
      fail-fast: ${{ inputs.fail_fast }}
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, "elements-regression", "known-issues"]
        shardTotal: [10]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          sed -i -e "s/image: 'mariadb:lts'/image: 'mariadb:11.2.4-jammy'/g" node_modules/@wordpress/env/lib/build-docker-compose-config.js

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-plugin.outputs.artifact_name }}
          path: ./build

      - name: Update wp-env.json
        run: node ./.github/scripts/build-wp-env.js

      - name: Install WordPress environment
        run: npm run start-local-server

      - name: Update WordPress to nightly build (Scheduled Runs Only)
        if: ${{ github.event_name == 'schedule' }}
        run: npx wp-env run cli wp core update https://wordpress.org/nightly-builds/wordpress-latest.zip

      - name: Setup test data
        run: npm run test:setup:playwright

      - name: Install Playwright
        run: npx playwright install chromium

      - name: Run Playwright tests
        if: ${{ matrix.shardIndex != 'elements-regression' && matrix.shardIndex != 'known-issues' }}
        run: npm run test:playwright -- --grep-invert="@known-issue" --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} --reporter=${{ inputs.reporter || 'list,github' }}

      - name: Run regression tests
        if: ${{ matrix.shardIndex == 'elements-regression' }}
        run: npm run test:playwright:elements-regression -- --reporter=${{ inputs.reporter || 'list,github' }}

      - name: Run tests with known issues
        if: ${{ matrix.shardIndex == 'known-issues' }}
        run: |
          echo "Running tests with '@known-issue' tag..."
          npm run test:playwright -- --grep="@known-issue" --reporter=${{ inputs.reporter || 'list,github' }} || echo "Known issues failed"

      - name: Upload artifacts
        if: ${{ matrix.shardIndex == 'known-issues' }}
        uses: actions/upload-artifact@v4
        with:
          name: known-issues
          path: known-issues-status.txt

  test-result:
    needs: Playwright
    if: ${{ always() }}
    runs-on: ubuntu-22.04
    name: Playwright - Test Results
    steps:
      - name: Test status
        run: echo "Test status is - ${{ needs.Playwright.result }}"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: known-issues

      - name: Debug known issues
        run: |
          if [ -f known-issues-status.txt ]; then
            echo "Known issues detected"
            cat known-issues-status.txt
          else
            echo "No known issues"
          fi

      - name: Send Slack message
        if: env.file_exists == 'true'
        uses: ./.github/workflows/post-to-slack
        with:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_TAG_CHANNELS: ${{ secrets.TEST_AUTOMATION_RESULTS }}
          PAYLOAD: |
            {
              "text": "Elementor Core: Known issues detected in version: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Elementor Core: Known issues detected in version: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
